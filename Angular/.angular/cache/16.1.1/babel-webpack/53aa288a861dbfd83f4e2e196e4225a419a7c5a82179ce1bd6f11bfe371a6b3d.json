{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/user-health-data.service\";\nimport * as i3 from \"../../services/authentication.service\";\nimport * as i4 from \"@angular/common\";\nfunction VaccinationScheduleComponent_form_3_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(group_r5);\n  }\n}\nfunction VaccinationScheduleComponent_form_3_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vaccine_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(vaccine_r6.name);\n  }\n}\nfunction VaccinationScheduleComponent_form_3_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 14);\n    i0.ɵɵlistener(\"change\", function VaccinationScheduleComponent_form_3_div_9_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const dose_r7 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(dose_r7.checked = !dose_r7.checked);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dose_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", dose_r7.checked);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dose_r7.doseName);\n  }\n}\nfunction VaccinationScheduleComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function VaccinationScheduleComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.registerVaccination());\n    });\n    i0.ɵɵelementStart(1, \"div\", 8)(2, \"select\", 9)(3, \"option\", 10);\n    i0.ɵɵtext(4, \"Selecione um grupo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, VaccinationScheduleComponent_form_3_option_5_Template, 2, 1, \"option\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 8)(7, \"select\", 11);\n    i0.ɵɵlistener(\"change\", function VaccinationScheduleComponent_form_3_Template_select_change_7_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.updateDoses());\n    });\n    i0.ɵɵtemplate(8, VaccinationScheduleComponent_form_3_option_8_Template, 2, 1, \"option\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, VaccinationScheduleComponent_form_3_div_9_Template, 4, 2, \"div\", 6);\n    i0.ɵɵelementStart(10, \"div\", 8);\n    i0.ɵɵelement(11, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 13);\n    i0.ɵɵtext(13, \"Registrar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.vaccineForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.groups);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.filteredVaccines);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.selectedDoses);\n  }\n}\nfunction VaccinationScheduleComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const vaccination_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(vaccination_r13.selectedGroup);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(vaccination_r13.selectedVaccine);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(vaccination_r13.selectedDoses.join(\", \"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 4, vaccination_r13.selectedDate, \"dd/MM/yy\"));\n  }\n}\nclass VaccinationScheduleComponent {\n  constructor(fb, healthService, authenticationService // Adicione esta linha\n  ) {\n    this.fb = fb;\n    this.healthService = healthService;\n    this.authenticationService = authenticationService;\n    this.selectedGroup = \"\";\n    this.selectedVaccine = \"\";\n    this.selectedDate = \"\";\n    this.registeredVaccinations = [];\n    this.filteredVaccines = [];\n    this.selectedDoses = [];\n    this.groups = [\"Crianças\", \"Adolescentes\", \"Adultos\", \"Idosos\", \"Gestantes\"];\n    this.vaccinesByGroup = {\n      'Crianças': [{\n        name: 'BCG (Tuberculose)',\n        doses: [{\n          doseName: 'Dose ao nascer',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Hepatite B',\n        doses: [{\n          doseName: 'Dose ao nascer',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '2 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '6 meses',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'VIP/VOP (Poliomielite)',\n        doses: [{\n          doseName: '2 meses (VIP)',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '4 meses (VIP)',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '6 meses (VIP)',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '15 meses (VOP)',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '4 anos (VOP)',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Pentavalente (DTP, Hib e Hepatite B)',\n        doses: [{\n          doseName: '2 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '4 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '6 meses',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Pneumocócica 10-valente',\n        doses: [{\n          doseName: '2 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '4 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '12 meses',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Meningocócica C ou ACWY',\n        doses: [{\n          doseName: '3 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '5 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '12 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '11 anos',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Rotavírus',\n        doses: [{\n          doseName: '2 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '4 meses',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Febre Amarela',\n        doses: [{\n          doseName: '9 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '4 anos',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Tríplice Viral (Sarampo, Caxumba e Rubéola)',\n        doses: [{\n          doseName: '12 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '15 meses (Tetra Viral)',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'DTPa (Difteria, Tétano e Coqueluche)',\n        doses: [{\n          doseName: '15 meses',\n          checked: false,\n          date: ''\n        }, {\n          doseName: '4 anos',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Hepatite A',\n        doses: [{\n          doseName: '15 meses',\n          checked: false,\n          date: ''\n        }]\n      }],\n      'Adolescentes': [{\n        name: 'HPV quadrivalente',\n        doses: [{\n          doseName: 'Primeira Dose',\n          checked: false,\n          date: ''\n        }, {\n          doseName: 'Segunda Dose - 6 meses',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Meningocócica ACWY',\n        doses: [{\n          doseName: 'Dose única aos 11 anos',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'dTpa (Difteria, Tétano e Coqueluche)',\n        doses: [{\n          doseName: 'Dose única aos 11 anos',\n          checked: false,\n          date: ''\n        }]\n      }],\n      'Adultos': [{\n        name: 'Hepatite B',\n        doses: [{\n          doseName: 'Primeira Dose',\n          checked: false,\n          date: ''\n        }, {\n          doseName: 'Segunda Dose',\n          checked: false,\n          date: ''\n        }, {\n          doseName: 'Terceira Dose',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'dT (Difteria e Tétano)',\n        doses: [{\n          doseName: 'Reforço a cada 10 anos',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Tríplice Viral',\n        doses: [{\n          doseName: 'Primeira Dose',\n          checked: false,\n          date: ''\n        }, {\n          doseName: 'Segunda Dose',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Febre Amarela',\n        doses: [{\n          doseName: 'Dose única a cada 10 anos',\n          checked: false,\n          date: ''\n        }]\n      }],\n      'Idosos': [{\n        name: 'Influenza (Gripe)',\n        doses: [{\n          doseName: 'Dose anual',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'Pneumocócica 23-valente',\n        doses: [{\n          doseName: 'Dose única',\n          checked: false,\n          date: ''\n        }, {\n          doseName: 'Possibilidade de reforço',\n          checked: false,\n          date: ''\n        }]\n      }, {\n        name: 'dT (Difteria e Tétano)',\n        doses: [{\n          doseName: 'Reforço a cada 10 anos',\n          checked: false,\n          date: ''\n        }]\n      }],\n      'Gestantes': [{\n        name: 'dTpa (Difteria, Tétano e Coqueluche)',\n        doses: [{\n          doseName: 'Dose única em cada gestação',\n          checked: false,\n          date: ''\n        }]\n      }]\n    };\n    this.vaccineForm = this.fb.group({\n      selectedGroup: [''],\n      selectedVaccine: ['']\n      // ... outros controles de formulário aqui\n    });\n  }\n\n  ngOnInit() {\n    this.getRegisteredVaccinations(); // Adicione esta linha\n    this.vaccineForm?.get('selectedGroup')?.valueChanges.subscribe(value => {\n      this.selectedGroup = value;\n      this.updateVaccines();\n    });\n    this.vaccineForm?.get('selectedVaccine')?.valueChanges.subscribe(value => {\n      this.selectedVaccine = value;\n      this.updateDoses();\n    });\n  }\n  getRegisteredVaccinations() {\n    const currentUser = this.authenticationService.getCurrentUser();\n    if (currentUser && currentUser.id) {\n      this.healthService.getVaccinationSchedulesForUser(currentUser.id).subscribe(data => {\n        if (data) {\n          this.registeredVaccinations = data;\n        }\n      }, error => {\n        console.error('Error fetching registered vaccinations:', error);\n      });\n    }\n  }\n  updateVaccines() {\n    this.filteredVaccines = this.vaccinesByGroup[this.selectedGroup] || [];\n    console.log(\"Filtered Vaccines:\", this.filteredVaccines);\n    // Adicione estas linhas\n    if (this.filteredVaccines.length > 0) {\n      this.selectedVaccine = this.filteredVaccines[0].name;\n      this.updateDoses();\n    }\n  }\n  updateDoses() {\n    console.log(\"updateDoses called\");\n    const vaccine = this.filteredVaccines.find(v => v.name === this.selectedVaccine);\n    this.selectedDoses = vaccine ? vaccine.doses : [];\n    console.log(\"Selected Doses:\", this.selectedDoses);\n  }\n  registerVaccination() {\n    const selectedDosesChecked = this.selectedDoses.filter(dose => dose.checked);\n    const vaccination = {\n      userId: 0,\n      selectedGroup: this.selectedGroup,\n      selectedVaccine: this.selectedVaccine,\n      selectedDoses: selectedDosesChecked.map(dose => dose.doseName),\n      selectedDate: this.selectedDate,\n      timestamp: new Date()\n    };\n    this.healthService.registrarCalendarioVacinas(vaccination).subscribe(data => {\n      this.registeredVaccinations.push(data);\n      this.vaccineForm.reset(); // Reseta o formulário\n    }, error => {\n      console.error('Error registering vaccination:', error);\n    });\n  }\n}\nVaccinationScheduleComponent.ɵfac = function VaccinationScheduleComponent_Factory(t) {\n  return new (t || VaccinationScheduleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserHealthDataService), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n};\nVaccinationScheduleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VaccinationScheduleComponent,\n  selectors: [[\"app-vaccination-schedule\"]],\n  decls: 18,\n  vars: 2,\n  consts: [[1, \"container\"], [\"class\", \"mb-3\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"table-responsive\", \"shadow\", \"rounded\"], [\"id\", \"vaccine-table\", 1, \"table\", \"table-hover\"], [1, \"thead-light\"], [1, \"break-word\", \"small-header\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-2\"], [\"formControlName\", \"selectedGroup\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [\"formControlName\", \"selectedVaccine\", 1, \"form-control\", 3, \"change\"], [\"type\", \"date\", \"formControlName\", \"selectedDate\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"text-white\", \"mb-2\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"]],\n  template: function VaccinationScheduleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Calend\\u00E1rio Vacinal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, VaccinationScheduleComponent_form_3_Template, 14, 4, \"form\", 1);\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"table\", 3)(6, \"thead\", 4)(7, \"tr\")(8, \"th\", 5);\n      i0.ɵɵtext(9, \"Grupo de Vacina\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 5);\n      i0.ɵɵtext(11, \"Tipo de Vacina\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 5);\n      i0.ɵɵtext(13, \"Doses\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 5);\n      i0.ɵɵtext(15, \"Data\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, VaccinationScheduleComponent_tr_17_Template, 10, 7, \"tr\", 6);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.vaccineForm);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.registeredVaccinations);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.DatePipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { VaccinationScheduleComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","group_r5","vaccine_r6","name","ɵɵlistener","VaccinationScheduleComponent_form_3_div_9_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r9","dose_r7","$implicit","ɵɵresetView","checked","ɵɵproperty","doseName","VaccinationScheduleComponent_form_3_Template_form_ngSubmit_0_listener","_r11","ctx_r10","ɵɵnextContext","registerVaccination","ɵɵtemplate","VaccinationScheduleComponent_form_3_option_5_Template","VaccinationScheduleComponent_form_3_Template_select_change_7_listener","ctx_r12","updateDoses","VaccinationScheduleComponent_form_3_option_8_Template","VaccinationScheduleComponent_form_3_div_9_Template","ɵɵelement","ctx_r0","vaccineForm","groups","filteredVaccines","selectedDoses","vaccination_r13","selectedGroup","selectedVaccine","join","ɵɵpipeBind2","selectedDate","VaccinationScheduleComponent","constructor","fb","healthService","authenticationService","registeredVaccinations","vaccinesByGroup","doses","date","group","ngOnInit","getRegisteredVaccinations","get","valueChanges","subscribe","value","updateVaccines","currentUser","getCurrentUser","id","getVaccinationSchedulesForUser","data","error","console","log","length","vaccine","find","v","selectedDosesChecked","filter","dose","vaccination","userId","map","timestamp","Date","registrarCalendarioVacinas","push","reset","ɵɵdirectiveInject","i1","FormBuilder","i2","UserHealthDataService","i3","AuthenticationService","selectors","decls","vars","consts","template","VaccinationScheduleComponent_Template","rf","ctx","VaccinationScheduleComponent_form_3_Template","VaccinationScheduleComponent_tr_17_Template"],"sources":["/home/feredragon/Documentos/GitHub/App-portal-mais-saude/Angular/src/app/user-health-data-module/vaccination-schedule/vaccination-schedule.component.ts","/home/feredragon/Documentos/GitHub/App-portal-mais-saude/Angular/src/app/user-health-data-module/vaccination-schedule/vaccination-schedule.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service'; // Adicione esta importação\nimport { UserHealthDataService } from '../../services/user-health-data.service';\nimport { Vaccination, Dose } from '../../interfaces/IHealt';\n\n@Component({\n  selector: 'app-vaccination-schedule',\n  templateUrl: './vaccination-schedule.component.html',\n  styleUrls: ['./vaccination-schedule.component.scss']\n})\nexport class VaccinationScheduleComponent implements OnInit {\n  vaccineForm: FormGroup;\n  selectedGroup: string = \"\";\n  selectedVaccine: string = \"\";\n  selectedDate: string = \"\";\n  registeredVaccinations: Vaccination[] = [];\n  filteredVaccines: any[] = [];\n  selectedDoses: Dose[] = [];\n  groups: string[] = [\"Crianças\", \"Adolescentes\", \"Adultos\", \"Idosos\", \"Gestantes\",];\n  vaccinesByGroup: Record<string, any> = {\n    'Crianças': [\n      { name: 'BCG (Tuberculose)', doses: [{ doseName: 'Dose ao nascer', checked: false, date: '' }] },\n      { name: 'Hepatite B', doses: [\n        { doseName: 'Dose ao nascer', checked: false, date: '' },\n        { doseName: '2 meses', checked: false, date: '' },\n        { doseName: '6 meses', checked: false, date: '' }\n      ]},\n      { name: 'VIP/VOP (Poliomielite)', doses: [\n        { doseName: '2 meses (VIP)', checked: false, date: '' },\n        { doseName: '4 meses (VIP)', checked: false, date: '' },\n        { doseName: '6 meses (VIP)', checked: false, date: '' },\n        { doseName: '15 meses (VOP)', checked: false, date: '' },\n        { doseName: '4 anos (VOP)', checked: false, date: '' }\n      ]},\n      { name: 'Pentavalente (DTP, Hib e Hepatite B)', doses: [\n        { doseName: '2 meses', checked: false, date: '' },\n        { doseName: '4 meses', checked: false, date: '' },\n        { doseName: '6 meses', checked: false, date: '' }\n      ]},\n      { name: 'Pneumocócica 10-valente', doses: [\n        { doseName: '2 meses', checked: false, date: '' },\n        { doseName: '4 meses', checked: false, date: '' },\n        { doseName: '12 meses', checked: false, date: '' }\n      ]},\n      { name: 'Meningocócica C ou ACWY', doses: [\n        { doseName: '3 meses', checked: false, date: '' },\n        { doseName: '5 meses', checked: false, date: '' },\n        { doseName: '12 meses', checked: false, date: '' },\n        { doseName: '11 anos', checked: false, date: '' }\n      ]},\n      { name: 'Rotavírus', doses: [\n        { doseName: '2 meses', checked: false, date: '' },\n        { doseName: '4 meses', checked: false, date: '' }\n      ]},\n      { name: 'Febre Amarela', doses: [\n        { doseName: '9 meses', checked: false, date: '' },\n        { doseName: '4 anos', checked: false, date: '' }\n      ]},\n      { name: 'Tríplice Viral (Sarampo, Caxumba e Rubéola)', doses: [\n        { doseName: '12 meses', checked: false, date: '' },\n        { doseName: '15 meses (Tetra Viral)', checked: false, date: '' }\n      ]},\n      { name: 'DTPa (Difteria, Tétano e Coqueluche)', doses: [\n        { doseName: '15 meses', checked: false, date: '' },\n        { doseName: '4 anos', checked: false, date: '' }\n      ]},\n      { name: 'Hepatite A', doses: [\n        { doseName: '15 meses', checked: false, date: '' }\n      ]}\n    ],\n    \n     'Adolescentes': [\n      { name: 'HPV quadrivalente', doses: [\n        { doseName: 'Primeira Dose', checked: false, date: '' },\n        { doseName: 'Segunda Dose - 6 meses', checked: false, date: '' }\n      ]},\n      { name: 'Meningocócica ACWY', doses: [\n        { doseName: 'Dose única aos 11 anos', checked: false, date: '' }\n      ]},\n      { name: 'dTpa (Difteria, Tétano e Coqueluche)', doses: [\n        { doseName: 'Dose única aos 11 anos', checked: false, date: '' }\n      ]}\n    ],\n    'Adultos': [\n      { name: 'Hepatite B', doses: [\n        { doseName: 'Primeira Dose', checked: false, date: '' },\n        { doseName: 'Segunda Dose', checked: false, date: '' },\n        { doseName: 'Terceira Dose', checked: false, date: '' }\n      ]},\n      { name: 'dT (Difteria e Tétano)', doses: [\n        { doseName: 'Reforço a cada 10 anos', checked: false, date: '' }\n      ]},\n      { name: 'Tríplice Viral', doses: [\n        { doseName: 'Primeira Dose', checked: false, date: '' },\n        { doseName: 'Segunda Dose', checked: false, date: '' }\n      ]},\n      { name: 'Febre Amarela', doses: [\n        { doseName: 'Dose única a cada 10 anos', checked: false, date: '' }\n      ]}\n    ],\n    'Idosos': [\n      { name: 'Influenza (Gripe)', doses: [\n        { doseName: 'Dose anual', checked: false, date: '' }\n      ]},\n      { name: 'Pneumocócica 23-valente', doses: [\n        { doseName: 'Dose única', checked: false, date: '' },\n        { doseName: 'Possibilidade de reforço', checked: false, date: '' }\n      ]},\n      { name: 'dT (Difteria e Tétano)', doses: [\n        { doseName: 'Reforço a cada 10 anos', checked: false, date: '' }\n      ]}\n    ],\n    'Gestantes': [\n      { name: 'dTpa (Difteria, Tétano e Coqueluche)', doses: [\n        { doseName: 'Dose única em cada gestação', checked: false, date: '' }\n      ]},\n    ]\n  };\n  constructor(\n    private fb: FormBuilder, \n    private healthService: UserHealthDataService,\n    private authenticationService: AuthenticationService  // Adicione esta linha\n  ) { \n    this.vaccineForm = this.fb.group({\n      selectedGroup: [''],\n      selectedVaccine: [''],\n      // ... outros controles de formulário aqui\n    });\n  }\n\n  ngOnInit(): void {\n    this.getRegisteredVaccinations(); // Adicione esta linha\n    this.vaccineForm?.get('selectedGroup')?.valueChanges.subscribe(value => {\n      this.selectedGroup = value;\n      this.updateVaccines();\n    });\n    \n    this.vaccineForm?.get('selectedVaccine')?.valueChanges.subscribe(value => {\n      this.selectedVaccine = value;\n      this.updateDoses();\n    });\n  }\n\n  getRegisteredVaccinations(): void {\n    const currentUser = this.authenticationService.getCurrentUser();\n    if (currentUser && currentUser.id) {\n      this.healthService.getVaccinationSchedulesForUser(currentUser.id).subscribe((data: Vaccination[]) => {\n        if (data) {\n          this.registeredVaccinations = data;\n        }\n      },\n      error => {\n        console.error('Error fetching registered vaccinations:', error);\n      });\n    }\n  }\n  \n  updateVaccines(): void {\n    this.filteredVaccines = this.vaccinesByGroup[this.selectedGroup] || [];\n    console.log(\"Filtered Vaccines:\", this.filteredVaccines);\n  \n    // Adicione estas linhas\n    if (this.filteredVaccines.length > 0) {\n      this.selectedVaccine = this.filteredVaccines[0].name;\n      this.updateDoses();\n    }\n  }\n  \n  updateDoses(): void {\n    console.log(\"updateDoses called\");\n    const vaccine = this.filteredVaccines.find(v => v.name === this.selectedVaccine);\n    this.selectedDoses = vaccine ? vaccine.doses : [];\n    console.log(\"Selected Doses:\", this.selectedDoses);\n  }\n  \n  registerVaccination(): void {\n    const selectedDosesChecked: Dose[] = this.selectedDoses.filter(dose => dose.checked);\n  \n    const vaccination: Vaccination = {\n        userId: 0,  // Este valor será atualizado no serviço\n        selectedGroup: this.selectedGroup,\n        selectedVaccine: this.selectedVaccine,\n        selectedDoses: selectedDosesChecked.map(dose => dose.doseName),\n        selectedDate: this.selectedDate,  // Adicione esta linha se você atualizar sua interface Vaccination para incluir selectedDate\n        timestamp: new Date()\n      };\n      \n  \n      this.healthService.registrarCalendarioVacinas(vaccination).subscribe(\n        data => {\n          this.registeredVaccinations.push(data);\n          this.vaccineForm.reset(); // Reseta o formulário\n        },\n        error => {\n          console.error('Error registering vaccination:', error);\n        }\n      );\n    }\n  }","<div class=\"container\">\n    <h2>Calendário Vacinal</h2>\n    <form *ngIf=\"vaccineForm\" [formGroup]=\"vaccineForm\" (ngSubmit)=\"registerVaccination()\" class=\"mb-3\">\n      <div class=\"form-group mb-2\">\n        <select formControlName=\"selectedGroup\" class=\"form-control\">\n            <option value=\"\" disabled selected>Selecione um grupo</option>  <!-- Placeholder -->\n            <option *ngFor=\"let group of groups\">{{ group }}</option>\n          </select>          \n      </div>\n      <div class=\"form-group mb-2\">\n        <select formControlName=\"selectedVaccine\" class=\"form-control\" (change)=\"updateDoses()\">\n          <option *ngFor=\"let vaccine of filteredVaccines\">{{ vaccine.name }}</option>\n        </select>\n      </div>\n      <div *ngFor=\"let dose of selectedDoses\">\n        <input type=\"checkbox\" [checked]=\"dose.checked\" (change)=\"dose.checked = !dose.checked\">\n        <label>{{dose.doseName}}</label>\n      </div>      \n      <div class=\"form-group mb-2\">\n        <input type=\"date\" formControlName=\"selectedDate\" class=\"form-control\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-info text-white mb-2\">Registrar</button>\n    </form>\n    <div class=\"table-responsive shadow rounded\">\n      <table id=\"vaccine-table\" class=\"table table-hover\">\n        <thead class=\"thead-light\">\n          <tr>\n            <th class=\"break-word small-header\">Grupo de Vacinação</th>\n            <th class=\"break-word small-header\">Tipo de Vacina</th>\n            <th class=\"break-word small-header\">Doses</th>\n            <th class=\"break-word small-header\">Data</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let vaccination of registeredVaccinations\">\n            <td>{{ vaccination.selectedGroup }}</td>\n            <td>{{ vaccination.selectedVaccine }}</td>\n            <td>{{ vaccination.selectedDoses.join(', ') }}</td>\n            <td>{{ vaccination.selectedDate | date:'dd/MM/yy' }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}