{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../app/services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.authService.isAuthenticated()) {\n      return true; // Usuário autenticado, permite o acesso à rota\n    } else {\n      this.router.navigate(['/login']); // Redireciona para a página de login\n      return false; // Bloqueia o acesso à rota\n    }\n  }\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","isAuthenticated","navigate","i0","ɵɵinject","i1","AuthenticationService","i2","Router","factory","ɵfac","providedIn"],"sources":["/home/feredragon/Documentos/GitHub/App-portal-mais-saude/Angular/src/app/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from '../app/services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authService.isAuthenticated()) {\n      return true; // Usuário autenticado, permite o acesso à rota\n    } else {\n      this.router.navigate(['/login']); // Redireciona para a página de login\n      return false; // Bloqueia o acesso à rota\n    }\n  }\n}\n\n\n\n"],"mappings":";;;AAIA,MAGaA,SAAS;EAEpBC,YACUC,WAAkC,EAClCC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,WAAW,CAACG,eAAe,EAAE,EAAE;MACtC,OAAO,IAAI,CAAC,CAAC;KACd,MAAM;MACL,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClC,OAAO,KAAK,CAAC,CAAC;;EAElB;;;AAdWN,SAAS,C;mBAATA,SAAS,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATZ,SAAS,C;SAATA,SAAS;EAAAa,OAAA,EAATb,SAAS,CAAAc,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPf,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}