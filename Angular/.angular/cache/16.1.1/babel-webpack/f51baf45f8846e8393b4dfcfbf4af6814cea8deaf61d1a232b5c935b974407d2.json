{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user-health-data.service\";\nimport * as i2 from \"../../services/authentication.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction VitalSignsComponent_form_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Formato inv\\u00E1lido. Use 000/00, 000/000 ou 00/00. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VitalSignsComponent_form_4_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Frequ\\u00EAncia card\\u00EDaca deve estar entre 40 e 200 batimentos por minuto. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VitalSignsComponent_form_4_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" A temperatura corporal deve estar entre 34.0 e 42.0 graus Celsius. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VitalSignsComponent_form_4_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" A glicose deve estar entre 20 e 800 mg/dL. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction VitalSignsComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function VitalSignsComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.register());\n    });\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelement(2, \"input\", 10);\n    i0.ɵɵtemplate(3, VitalSignsComponent_form_4_div_3_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 12);\n    i0.ɵɵelement(5, \"input\", 13);\n    i0.ɵɵtemplate(6, VitalSignsComponent_form_4_div_6_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 12);\n    i0.ɵɵelement(8, \"input\", 14);\n    i0.ɵɵtemplate(9, VitalSignsComponent_form_4_div_9_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 12);\n    i0.ɵɵelement(11, \"input\", 15);\n    i0.ɵɵtemplate(12, VitalSignsComponent_form_4_div_12_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 16);\n    i0.ɵɵtext(14, \"Registrar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    let tmp_7_0;\n    let tmp_8_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.vitalSignsForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ((tmp_1_0 = ctx_r0.vitalSignsForm.get(\"bloodPressure\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r0.vitalSignsForm.get(\"bloodPressure\")) == null ? null : tmp_1_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.vitalSignsForm.get(\"bloodPressure\")) == null ? null : tmp_2_0.hasError(\"pattern\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ((tmp_3_0 = ctx_r0.vitalSignsForm.get(\"heartRate\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r0.vitalSignsForm.get(\"heartRate\")) == null ? null : tmp_3_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r0.vitalSignsForm.get(\"heartRate\")) == null ? null : tmp_4_0.hasError(\"min\")) || ((tmp_4_0 = ctx_r0.vitalSignsForm.get(\"heartRate\")) == null ? null : tmp_4_0.hasError(\"max\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ((tmp_5_0 = ctx_r0.vitalSignsForm.get(\"bodyTemperature\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx_r0.vitalSignsForm.get(\"bodyTemperature\")) == null ? null : tmp_5_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r0.vitalSignsForm.get(\"bodyTemperature\")) == null ? null : tmp_6_0.hasError(\"min\")) || ((tmp_6_0 = ctx_r0.vitalSignsForm.get(\"bodyTemperature\")) == null ? null : tmp_6_0.hasError(\"max\")));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ((tmp_7_0 = ctx_r0.vitalSignsForm.get(\"bloodGlucose\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx_r0.vitalSignsForm.get(\"bloodGlucose\")) == null ? null : tmp_7_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx_r0.vitalSignsForm.get(\"bloodGlucose\")) == null ? null : tmp_8_0.hasError(\"min\")) || ((tmp_8_0 = ctx_r0.vitalSignsForm.get(\"bloodGlucose\")) == null ? null : tmp_8_0.hasError(\"max\")));\n  }\n}\nfunction VitalSignsComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const vitalSign_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(vitalSign_r8.bloodPressure);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(vitalSign_r8.heartRate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(vitalSign_r8.bodyTemperature);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(vitalSign_r8.bloodGlucose);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 5, vitalSign_r8.timestamp, \"dd/MM/yy HH:mm\"));\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"component-padding\": a0\n  };\n};\nclass VitalSignsComponent {\n  constructor(userHealthDataService, authenticationService, router, formBuilder) {\n    this.userHealthDataService = userHealthDataService;\n    this.authenticationService = authenticationService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.vitalSigns = [];\n    this.isSummaryView = false; // Por padrão, definido como falso\n    this.vitalSignsForm = this.formBuilder.group({\n      bloodPressure: ['', [Validators.required, Validators.pattern(/^\\d{2,3}\\/\\d{2,3}$/)]],\n      heartRate: [null, [Validators.required, Validators.min(40), Validators.max(200)]],\n      bodyTemperature: [null, [Validators.required, Validators.min(20), Validators.max(45)]],\n      bloodGlucose: [null, [Validators.required, Validators.min(20), Validators.max(800)]]\n    });\n  }\n  ngOnInit() {\n    this.checkIfSummaryView();\n    this.getVitalSigns();\n  }\n  checkIfSummaryView() {\n    if (this.router.url.includes('summary')) {\n      this.isSummaryView = true;\n    }\n  }\n  getVitalSigns() {\n    const currentUser = this.authenticationService.getCurrentUser();\n    if (currentUser && currentUser.id) {\n      this.userHealthDataService.getVitalSignsForUser(currentUser.id).subscribe(vitalSigns => {\n        if (vitalSigns && vitalSigns.length > 0) {\n          this.vitalSigns = vitalSigns;\n        } else {\n          console.log('No vital signs data returned for user id', currentUser.id);\n        }\n      }, error => {\n        console.error('Error fetching vital signs for user id', currentUser.id, error);\n      });\n    }\n  }\n  register() {\n    const atLeastOneFieldValid = this.vitalSignsForm.get('heartRate')?.valid && this.vitalSignsForm.value.heartRate !== null || this.vitalSignsForm.get('bodyTemperature')?.valid && this.vitalSignsForm.value.bodyTemperature !== null || this.vitalSignsForm.get('bloodGlucose')?.valid && this.vitalSignsForm.value.bloodGlucose !== null || this.vitalSignsForm.get('bloodPressure')?.valid && this.vitalSignsForm.value.bloodPressure !== '';\n    if (atLeastOneFieldValid) {\n      const newVitalSigns = {\n        userId: 0,\n        bloodPressure: this.vitalSignsForm.value.bloodPressure,\n        heartRate: this.vitalSignsForm.value.heartRate,\n        bodyTemperature: this.vitalSignsForm.value.bodyTemperature,\n        bloodGlucose: this.vitalSignsForm.value.bloodGlucose,\n        timestamp: new Date()\n      };\n      this.userHealthDataService.registerVitalSigns(newVitalSigns).subscribe(() => {\n        this.getVitalSigns();\n        this.resetForm();\n      });\n    }\n  }\n  resetForm() {\n    this.vitalSignsForm.reset();\n  }\n}\nVitalSignsComponent.ɵfac = function VitalSignsComponent_Factory(t) {\n  return new (t || VitalSignsComponent)(i0.ɵɵdirectiveInject(i1.UserHealthDataService), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nVitalSignsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VitalSignsComponent,\n  selectors: [[\"app-vital-signs\"]],\n  inputs: {\n    isSummaryView: \"isSummaryView\"\n  },\n  decls: 21,\n  vars: 5,\n  consts: [[3, \"ngClass\"], [1, \"container\"], [\"class\", \"mb-3\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"table-responsive\", \"shadow\", \"rounded\"], [\"id\", \"vital-signs-table\", 1, \"table\", \"table-hover\"], [1, \"thead-light\"], [1, \"break-word\", \"small-header\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"justify-content-center\", \"mb-2\"], [\"type\", \"text\", \"formControlName\", \"bloodPressure\", \"placeholder\", \"Press\\u00E3o arterial\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\", \"mb-2\"], [\"type\", \"number\", \"formControlName\", \"heartRate\", \"placeholder\", \"Frequ\\u00EAncia card\\u00EDaca\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"number\", \"formControlName\", \"bodyTemperature\", \"placeholder\", \"Temperatura corporal\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"number\", \"formControlName\", \"bloodGlucose\", \"placeholder\", \"N\\u00EDveis de glicose no Sangue\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"text-white\", \"mb-2\"], [1, \"invalid-feedback\"]],\n  template: function VitalSignsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Sinais Vitais\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, VitalSignsComponent_form_4_Template, 15, 17, \"form\", 2);\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"table\", 4)(7, \"thead\", 5)(8, \"tr\")(9, \"th\", 6);\n      i0.ɵɵtext(10, \"Press\\u00E3o arterial\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 6);\n      i0.ɵɵtext(12, \"Frequ\\u00EAncia card\\u00EDaca\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 6);\n      i0.ɵɵtext(14, \"Temperatura corporal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 6);\n      i0.ɵɵtext(16, \"N\\u00EDveis de glicose\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\", 6);\n      i0.ɵɵtext(18, \"Data\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, VitalSignsComponent_tr_20_Template, 12, 8, \"tr\", 7);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, !ctx.isSummaryView));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.vitalSignsForm);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.vitalSigns);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.DatePipe],\n  styles: [\".component-padding[_ngcontent-%COMP%] {\\n  padding-top: 70px;\\n  width: 60%;\\n  margin: 0 auto;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci1oZWFsdGgtZGF0YS1tb2R1bGUvdml0YWwtc2lnbnMvdml0YWwtc2lnbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLFVBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbXBvbmVudC1wYWRkaW5nIHtcbiAgICBwYWRkaW5nLXRvcDogNzBweDtcbiAgICB3aWR0aDogNjAlO1xuICAgIG1hcmdpbjogMCBhdXRvOyAvLyBUaGlzIHdpbGwgY2VudGVyIHRoZSBjb250YWluZXIgaG9yaXpvbnRhbGx5XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvLyBUaGlzIHdpbGwgY2VudGVyIHRoZSBjb250ZW50IHZlcnRpY2FsbHlcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyAvLyBUaGlzIHdpbGwgY2VudGVyIHRoZSBjb250ZW50IGhvcml6b250YWxseVxufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { VitalSignsComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VitalSignsComponent_form_4_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","register","ɵɵelement","ɵɵtemplate","VitalSignsComponent_form_4_div_3_Template","VitalSignsComponent_form_4_div_6_Template","VitalSignsComponent_form_4_div_9_Template","VitalSignsComponent_form_4_div_12_Template","ɵɵproperty","ctx_r0","vitalSignsForm","ɵɵadvance","ɵɵpureFunction1","_c0","tmp_1_0","get","invalid","touched","tmp_2_0","hasError","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","ɵɵtextInterpolate","vitalSign_r8","bloodPressure","heartRate","bodyTemperature","bloodGlucose","ɵɵpipeBind2","timestamp","VitalSignsComponent","constructor","userHealthDataService","authenticationService","router","formBuilder","vitalSigns","isSummaryView","group","required","pattern","min","max","ngOnInit","checkIfSummaryView","getVitalSigns","url","includes","currentUser","getCurrentUser","id","getVitalSignsForUser","subscribe","length","console","log","error","atLeastOneFieldValid","valid","value","newVitalSigns","userId","Date","registerVitalSigns","resetForm","reset","ɵɵdirectiveInject","i1","UserHealthDataService","i2","AuthenticationService","i3","Router","i4","FormBuilder","selectors","inputs","decls","vars","consts","template","VitalSignsComponent_Template","rf","ctx","VitalSignsComponent_form_4_Template","VitalSignsComponent_tr_20_Template","_c1"],"sources":["/home/feredragon/Documentos/GitHub/App-portal-mais-saude/Angular/src/app/user-health-data-module/vital-signs/vital-signs.component.ts","/home/feredragon/Documentos/GitHub/App-portal-mais-saude/Angular/src/app/user-health-data-module/vital-signs/vital-signs.component.html"],"sourcesContent":["import { Component, OnInit,Input} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { VitalSigns } from '../../interfaces/IHealt';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { UserHealthDataService } from '../../services/user-health-data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-vital-signs',\n  templateUrl: './vital-signs.component.html',\n  styleUrls: ['./vital-signs.component.scss']\n})\nexport class VitalSignsComponent implements OnInit {\n  vitalSigns: VitalSigns[] = [];\n  vitalSignsForm: FormGroup;\n  @Input() isSummaryView: boolean = false; // Por padrão, definido como falso\n\n  constructor(\n    private userHealthDataService: UserHealthDataService,\n    private authenticationService: AuthenticationService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {\n    this.vitalSignsForm = this.formBuilder.group({\n      bloodPressure: ['', [Validators.required, Validators.pattern(/^\\d{2,3}\\/\\d{2,3}$/)]],\n      heartRate: [null, [Validators.required, Validators.min(40), Validators.max(200)]],\n      bodyTemperature: [null, [Validators.required, Validators.min(20), Validators.max(45)]],\n      bloodGlucose: [null, [Validators.required, Validators.min(20), Validators.max(800)]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.checkIfSummaryView();\n    this.getVitalSigns();\n  }\n\n  checkIfSummaryView(): void {\n    if (this.router.url.includes('summary')) {\n      this.isSummaryView = true;\n    }\n  }\n\n  getVitalSigns(): void {\n    const currentUser = this.authenticationService.getCurrentUser();\n    if (currentUser && currentUser.id) {\n      this.userHealthDataService.getVitalSignsForUser(currentUser.id).subscribe((vitalSigns: VitalSigns[]) => {\n        if (vitalSigns && vitalSigns.length > 0) {\n          this.vitalSigns = vitalSigns;\n        } else {\n          console.log('No vital signs data returned for user id', currentUser.id);\n        }\n      }, error => {\n        console.error('Error fetching vital signs for user id', currentUser.id, error);\n      });\n    }\n  }\n\n  register(): void {\n    const atLeastOneFieldValid = (\n      (this.vitalSignsForm.get('heartRate')?.valid && this.vitalSignsForm.value.heartRate !== null) ||\n      (this.vitalSignsForm.get('bodyTemperature')?.valid && this.vitalSignsForm.value.bodyTemperature !== null) ||\n      (this.vitalSignsForm.get('bloodGlucose')?.valid && this.vitalSignsForm.value.bloodGlucose !== null) ||\n      (this.vitalSignsForm.get('bloodPressure')?.valid && this.vitalSignsForm.value.bloodPressure !== '')\n    );\n\n    if (atLeastOneFieldValid) {\n      const newVitalSigns: VitalSigns = {\n        userId: 0,\n        bloodPressure: this.vitalSignsForm.value.bloodPressure,\n        heartRate: this.vitalSignsForm.value.heartRate,\n        bodyTemperature: this.vitalSignsForm.value.bodyTemperature,\n        bloodGlucose: this.vitalSignsForm.value.bloodGlucose,\n        timestamp: new Date()\n      };\n\n      this.userHealthDataService.registerVitalSigns(newVitalSigns).subscribe(() => {\n        this.getVitalSigns();\n        this.resetForm();\n      });\n    }\n  }\n\n  resetForm(): void {\n    this.vitalSignsForm.reset();\n  }\n}\n\n\n","<main [ngClass]=\"{'component-padding': !isSummaryView}\">\n  <div class=\"container\">\n<h2>Sinais Vitais</h2>\n<form *ngIf=\"vitalSignsForm\" [formGroup]=\"vitalSignsForm\" (ngSubmit)=\"register()\" class=\"mb-3\">\n  <div class=\"form-group justify-content-center mb-2\">\n    <input type=\"text\" formControlName=\"bloodPressure\" placeholder=\"Pressão arterial\" class=\"form-control\" [ngClass]=\"{'is-invalid': vitalSignsForm.get('bloodPressure')?.invalid && vitalSignsForm.get('bloodPressure')?.touched}\">\n    <div *ngIf=\"vitalSignsForm.get('bloodPressure')?.hasError('pattern')\" class=\"invalid-feedback\">\n      Formato inválido. Use 000/00, 000/000 ou 00/00.\n    </div>\n  </div>\n  <div class=\"form-group mb-2\">\n    <input type=\"number\" formControlName=\"heartRate\" placeholder=\"Frequência cardíaca\" class=\"form-control\" [ngClass]=\"{'is-invalid': vitalSignsForm.get('heartRate')?.invalid && vitalSignsForm.get('heartRate')?.touched}\">\n    <div *ngIf=\"vitalSignsForm.get('heartRate')?.hasError('min') || vitalSignsForm.get('heartRate')?.hasError('max')\" class=\"invalid-feedback\">\n      Frequência cardíaca deve estar entre 40 e 200 batimentos por minuto.\n    </div>\n  </div>\n  <div class=\"form-group mb-2\">\n    <input type=\"number\" formControlName=\"bodyTemperature\" placeholder=\"Temperatura corporal\" class=\"form-control\" [ngClass]=\"{'is-invalid': vitalSignsForm.get('bodyTemperature')?.invalid && vitalSignsForm.get('bodyTemperature')?.touched}\">\n    <div *ngIf=\"vitalSignsForm.get('bodyTemperature')?.hasError('min') || vitalSignsForm.get('bodyTemperature')?.hasError('max')\" class=\"invalid-feedback\">\n      A temperatura corporal deve estar entre 34.0 e 42.0 graus Celsius.\n    </div>\n  </div>\n  <div class=\"form-group mb-2\">\n    <input type=\"number\" formControlName=\"bloodGlucose\" placeholder=\"Níveis de glicose no Sangue\" class=\"form-control\" [ngClass]=\"{'is-invalid': vitalSignsForm.get('bloodGlucose')?.invalid && vitalSignsForm.get('bloodGlucose')?.touched}\">\n    <div *ngIf=\"vitalSignsForm.get('bloodGlucose')?.hasError('min') || vitalSignsForm.get('bloodGlucose')?.hasError('max')\" class=\"invalid-feedback\">\n      A glicose deve estar entre 20 e 800 mg/dL.\n    </div>\n  </div>\n  <button type=\"submit\"  class=\"btn btn-info text-white mb-2\">Registrar</button>\n</form>\n<div class=\"table-responsive shadow rounded\">\n  <table id=\"vital-signs-table\" class=\"table table-hover\">\n    <thead class=\"thead-light\">\n      <tr>\n        <th class=\"break-word small-header\">Pressão arterial</th>\n        <th class=\"break-word small-header\">Frequência cardíaca</th>\n        <th class=\"break-word small-header\">Temperatura corporal</th>\n        <th class=\"break-word small-header\">Níveis de glicose</th>\n        <th class=\"break-word small-header\">Data</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let vitalSign of vitalSigns\">\n        <td>{{ vitalSign.bloodPressure }}</td>\n        <td>{{ vitalSign.heartRate }}</td>\n        <td>{{ vitalSign.bodyTemperature }}</td>\n        <td>{{ vitalSign.bloodGlucose }}</td>\n        <td>{{ vitalSign.timestamp | date:'dd/MM/yy HH:mm' }}</td> <!-- Exibir a data formatada -->\n      </tr>\n    </tbody>\n  </table>\n</div>\n</div>\n</main>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}