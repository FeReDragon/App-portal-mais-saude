{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CartService {\n  constructor(http) {\n    this.http = http;\n    this._cartItems = new BehaviorSubject([]);\n    const currentUserString = localStorage.getItem('currentUser');\n    if (currentUserString) {\n      const currentUser = JSON.parse(currentUserString);\n      this.fetchCartItemsFromServer(currentUser.id).subscribe();\n    }\n  }\n  get cartItems() {\n    return this._cartItems.asObservable();\n  }\n  getCurrentCartItemsValue() {\n    return this._cartItems.getValue();\n  }\n  addToCart(product, userId) {\n    const cartItems = this.getCurrentCartItemsValue();\n    const itemIndex = cartItems.findIndex(i => i.product.id === product.id);\n    if (itemIndex > -1) {\n      this.updateCartQuantity(itemIndex, cartItems[itemIndex].quantity + 1, userId);\n    } else {\n      this.http.post('http://localhost:3000/cartItems', {\n        product,\n        quantity: 1,\n        userId\n      }).subscribe(newItem => {\n        this._cartItems.next([...cartItems, newItem]);\n      });\n    }\n  }\n  updateCartQuantity(index, quantity, userId) {\n    const cartItems = this._cartItems.getValue();\n    cartItems[index].quantity = quantity;\n    return this.http.put(`http://localhost:3000/cartItems/${cartItems[index].id}`, cartItems[index]).pipe(tap(() => {\n      this._cartItems.next(cartItems);\n    }));\n  }\n  removeItem(item) {\n    const cartItems = this._cartItems.getValue();\n    const index = cartItems.findIndex(i => i.product.id === item.product.id);\n    if (index > -1) {\n      this.http.delete(`http://localhost:3000/cartItems/${item.id}`).subscribe(() => {\n        cartItems.splice(index, 1);\n        this._cartItems.next(cartItems);\n      });\n    }\n  }\n  fetchCartItemsFromServer(userId) {\n    return this.http.get(`http://localhost:3000/cartItems?userId=${userId}`).pipe(tap(response => {\n      this._cartItems.next(response);\n    }));\n  }\n  clearCart() {\n    this._cartItems.next([]); // Limpe a lista de itens do carrinho\n    // Chame a API para remover todos os itens do carrinho do servidor também\n  }\n\n  checkout() {\n    return this.http.post('http://localhost:3000/checkout', {});\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["BehaviorSubject","tap","CartService","constructor","http","_cartItems","currentUserString","localStorage","getItem","currentUser","JSON","parse","fetchCartItemsFromServer","id","subscribe","cartItems","asObservable","getCurrentCartItemsValue","getValue","addToCart","product","userId","itemIndex","findIndex","i","updateCartQuantity","quantity","post","newItem","next","index","put","pipe","removeItem","item","delete","splice","get","response","clearCart","checkout","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/feredragon/Documentos/GitHub/App-portal-mais-saude/Angular/src/app/services/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Product } from '../ecommerce-module/model/product.model';\n\nexport interface CartItem {\n  id: number;\n  product: Product;\n  quantity: number;\n  userId: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private _cartItems = new BehaviorSubject<CartItem[]>([]);\n  \n  constructor(private http: HttpClient) {\n    const currentUserString = localStorage.getItem('currentUser');\n    if (currentUserString) {\n      const currentUser = JSON.parse(currentUserString);\n      this.fetchCartItemsFromServer(currentUser.id).subscribe();\n    }\n  }\n  \n  get cartItems() {\n    return this._cartItems.asObservable();\n  }\n  \n  getCurrentCartItemsValue(): CartItem[] {\n    return this._cartItems.getValue();\n  }\n  \n  addToCart(product: Product, userId: number) {\n    const cartItems = this.getCurrentCartItemsValue();\n    const itemIndex = cartItems.findIndex(i => i.product.id === product.id);\n  \n    if (itemIndex > -1) {\n      this.updateCartQuantity(itemIndex, cartItems[itemIndex].quantity + 1, userId);\n    } else {\n      this.http.post<CartItem>('http://localhost:3000/cartItems', {\n        product,\n        quantity: 1,\n        userId\n      }).subscribe((newItem) => {\n        this._cartItems.next([...cartItems, newItem]);\n      });\n    }\n  }\n  \n  updateCartQuantity(index: number, quantity: number, userId: number): Observable<CartItem> {\n    const cartItems = this._cartItems.getValue();\n    cartItems[index].quantity = quantity;\n  \n    return this.http.put<CartItem>(`http://localhost:3000/cartItems/${cartItems[index].id}`, cartItems[index]).pipe(\n      tap(() => {\n        this._cartItems.next(cartItems);\n      })\n    );\n  }\n  \n  removeItem(item: CartItem) {\n    const cartItems = this._cartItems.getValue();\n    const index = cartItems.findIndex(i => i.product.id === item.product.id);\n  \n    if (index > -1) {\n      this.http.delete(`http://localhost:3000/cartItems/${item.id}`).subscribe(() => {\n        cartItems.splice(index, 1);\n        this._cartItems.next(cartItems);\n      });\n    }\n  }\n  \n  fetchCartItemsFromServer(userId: number): Observable<CartItem[]> {\n    return this.http.get<CartItem[]>(`http://localhost:3000/cartItems?userId=${userId}`).pipe(\n      tap(response => {\n        this._cartItems.next(response);\n      })\n    );\n  }\n  clearCart() {\n    this._cartItems.next([]); // Limpe a lista de itens do carrinho\n    // Chame a API para remover todos os itens do carrinho do servidor também\n  }\n  checkout(): Observable<any> {\n    return this.http.post<any>('http://localhost:3000/checkout', {});\n  }\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}