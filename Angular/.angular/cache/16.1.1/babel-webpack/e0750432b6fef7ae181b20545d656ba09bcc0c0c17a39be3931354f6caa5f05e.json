{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass NewsService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000'; // URL base do JSON Server\n  }\n\n  getAllNews() {\n    return this.http.get(`${this.baseUrl}/news`);\n  }\n  getNewsById(id) {\n    return this.http.get(`${this.baseUrl}/news/${id}`);\n  }\n  getUserCommentsForNews(newsId) {\n    return this.http.get(`${this.baseUrl}/comments?newsId=${newsId}`);\n  }\n  addComment(comment) {\n    return this.http.post(`${this.baseUrl}/comments`, comment);\n  }\n}\nNewsService.ɵfac = function NewsService_Factory(t) {\n  return new (t || NewsService)(i0.ɵɵinject(i1.HttpClient));\n};\nNewsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NewsService,\n  factory: NewsService.ɵfac,\n  providedIn: 'root'\n});\nexport { NewsService };","map":{"version":3,"names":["NewsService","constructor","http","baseUrl","getAllNews","get","getNewsById","id","getUserCommentsForNews","newsId","addComment","comment","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/feredragon/Documentos/GitHub/App-portal-mais-saude/Angular/src/app/services/news.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { News, UserComment } from '../interfaces/INews';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n\n  private baseUrl = 'http://localhost:3000'; // URL base do JSON Server\n\n  constructor(private http: HttpClient) { }\n\n  getAllNews(): Observable<News[]> {\n    return this.http.get<News[]>(`${this.baseUrl}/news`);\n  }\n\n  getNewsById(id: number): Observable<News> {\n    return this.http.get<News>(`${this.baseUrl}/news/${id}`);\n  }\n\n  getUserCommentsForNews(newsId: number): Observable<UserComment[]> {\n    return this.http.get<UserComment[]>(`${this.baseUrl}/comments?newsId=${newsId}`);\n  }\n\n  addComment(comment: UserComment): Observable<UserComment> {\n    return this.http.post<UserComment>(`${this.baseUrl}/comments`, comment);\n  }\n}\n\n\n\n"],"mappings":";;AAKA,MAGaA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uBAAuB,CAAC,CAAC;EAEH;;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,OAAO,CAAC;EACtD;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,SAASI,EAAE,EAAE,CAAC;EAC1D;EAEAC,sBAAsBA,CAACC,MAAc;IACnC,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,OAAO,oBAAoBM,MAAM,EAAE,CAAC;EAClF;EAEAC,UAAUA,CAACC,OAAoB;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAc,GAAG,IAAI,CAACT,OAAO,WAAW,EAAEQ,OAAO,CAAC;EACzE;;AApBWX,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhB,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPnB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}